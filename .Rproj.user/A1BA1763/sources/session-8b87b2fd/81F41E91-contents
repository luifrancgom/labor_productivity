---
title: "Introduction"
author: "Luis Francisco Gomez Lopez"
date: 2024-01-18
format:
  beamer:
    colortheme: dolphin
    fonttheme: structurebold
    theme: AnnArbor
    link-citations: true
    linkcolor: blue
    include-in-header:
      - text: |
          \usepackage{booktabs}
          \usepackage{longtable}
          \usepackage{array}
          \usepackage{multirow}
          \usepackage{wrapfig}
          \usepackage{float}
          \usepackage{colortbl}
          \usepackage{pdflscape}
          \usepackage{tabu}
          \usepackage{threeparttable}
          \usepackage{threeparttablex}
          \usepackage[normalem]{ulem}
          \usepackage{makecell}
          \usepackage{xcolor}
bibliography: intro_econ.bib
---

```{r setup, include = FALSE}
knitr::opts_chunk$set(echo      = FALSE, 
                      warning   = FALSE, 
                      message   = FALSE,
                      fig.align = "center")
```

```{r libraries}
library(tidyverse)
library(readxl)
library(janitor)
library(scales)
library(knitr)
library(kableExtra)
library(lubridate)
library(ggrepel)
```

# Contents

- Please Read Me
- Purpose
- Economic environment and the Company
- Population
- Mean height
- Household income
- Individuals per household
- Housing ownership
- School education system and bilingualism
- Aggregate value
- Egg wholesale prices
- Flows and stocks
- Acknowledgments
- References

# Please Read Me

- Check the message __Welcome greeting__ published in the News Bulletin Board.

- Dear student please edit your profile uploading a photo where your face is clearly visible.

- The purpose of the virtual meetings is to answer questions and not to make a summary of the study material.

- This presentation is based on [@cardenas_introduccion_2020, Chapter 1]

# Purpose

Identify the main characteristics of the Colombian economy, especially those that differentiate it from other economies

# Economic environment and the Company

- Set of economic factors and forces that influence the development of and organization.

```{r econ_env_macro}
#| out-width: 75%
#Plot
ggplot(data = tibble(x = 0, y = 0)) + 
    ## Company
    annotate(geom = "text", 
             x        = 0, 
             y        = 0,
             label    = "Company",
             size     = 3,
             fontface = "bold") +
    geom_rect(aes(xmin = -0.4,
                  xmax =  0.4,
                  ymin = -0.4,
                  ymax =  0.4),
              alpha = 0.3,
              fill  = "red",
              color = "red") +
    ## Micro environment
    geom_rect(aes(xmin = -2,
                  xmax =  2,
                  ymin = -2,
                  ymax =  2),
              alpha = 0.25,
              color = "blue") +
    annotate(geom = "text", 
             x        = 0, 
             y        = 1,
             label    = str_glue("Micro environment"),
             size     = 6,
             fontface = "bold") +
    annotate(geom = "text", 
             x     = 0, 
             y     = -1.2,
             label = str_glue("Clients - Suppliers - Intermediaries - Competitors - General Public"),
             size  = 3.5) +
    ## Macro environment
    geom_rect(aes(xmin = -3,
                  xmax =  3,
                  ymin = -3,
                  ymax =  3),
              alpha = 0.1,
              color = "purple") +
    annotate(geom     = "text", 
             x        = 0, 
             y        = 2.5,
             label    = str_glue("Macro environment"),
             size     = 8,
             fontface = "bold") +
    annotate(geom = "text", 
             x     =  0, 
             y     = -2.5,
             label = str_glue("Economic - Political - Social - Technological - Ecological - Legal"),
             size  = 5) +
    theme_void() +
    labs(caption = "Based on https://foda-dafo.com/ ")
```

# Population

```{r }
#| out-width: 75%
# Data
# https://www.dane.gov.co/ > Estadísticas por tema >
# Demografía y población > Proyecciones de población >
# Proyecciones y retroproyecciones de población nacional para el periodo 1950-2019 y 2020-2070 con base en el CNPV 2018 >
# Serie nacional de población por área, sexo y edad para el periodo 2020-2070

# Escoger el año
ano_choose <- 2024

pop_pyramid_tbl <- readxl::read_excel(path = "000_data/001_serie_nacional_de_poblacion_por_area_sexo_y_edad_para_el_periodo_2020_2070.xlsx", 
                                      sheet = 1, 
                                      range = "C12:KX95") |>  
  janitor::clean_names() |>  
  filter(area_geografica == "Total") |> 
  select(-c(area_geografica, total_hombres, total_mujeres)) |> 
  select(ano:mujeres_100_y_mas, total) |> 
  rename(mujeres_100 = mujeres_100_y_mas, hombres_100 = hombres_100_y_mas) |> 
  pivot_longer(cols = hombres_0:mujeres_100, 
               names_to = "genero_edad", 
               values_to = "pop") |>  
  filter(ano %in% c(ano_choose, ano_choose + 30)) |>  
  separate(col = genero_edad, 
           into = c("genero", "edad"), 
           sep = "_", 
           convert = TRUE) |>  
  mutate(pct_pop = pop / total, 
         .keep = "unused") |> 
  group_by(ano, genero) |>  
  mutate(rango_edad = cut(edad, 
                          breaks = c(seq.int(0, 85, 5), "Inf"),
                          labels = c(str_c(seq(0,80,5), seq(4,85,5), sep = "-"),
                                     "85+"), 
                          right = FALSE)) %>% 
  ungroup() |> 
  group_by(ano, genero, rango_edad) |> 
  summarize(pct_pop = sum(pct_pop)) |>  
  ungroup()

# Plot
pop_pyramid_tbl |>  
  ggplot(aes(x = ifelse(test = genero == "hombres", 
                        yes = -pct_pop, no = pct_pop) , 
             y = rango_edad,
             fill = genero)) + 
  geom_col(color = "black") + 
  scale_x_continuous(breaks = seq(-0.06, 0.06, 0.02),
                     labels = ~ scales::percent(abs(.), 
                                                accuracy = 1), 
                     limits = c(-0.05, 0.05)) +
  scale_fill_manual(labels = c("Men", "Women"),
                    values = c("#2C3E50", "#E31A1C")) + 
  facet_wrap(facets = vars(ano)) + 
  labs(x = NULL,
       y = NULL,
       fill = NULL, 
       caption = str_glue('Source: DANE - Proyecciones y retroproyecciones de población nacional 2020-2070 con base en el CNPV 2018 (área, sexo y edad)
                          Last update date: 2023-03-22')) + 
  theme(legend.position = "bottom",
        panel.border      = element_rect(fill = NA, 
                                         color = "black"),
        plot.background   = element_rect(fill = "#f3fcfc"),
        panel.background  = element_rect(fill = "#f3f7fc"),
        legend.background = element_rect(fill = "#f3fcfc"),
        plot.title        = element_text(face = "bold"),
        axis.title        = element_text(face = "bold"),
        legend.title      = element_text(face = "bold"),
        axis.text         = element_text(face = "bold"),
        legend.text       = element_text(size = 12), 
        axis.text.x       = element_text(hjust = 0.2, size = 12),
        axis.text.y       = element_text(size = 12),
        strip.background.x = element_rect(color = "black", 
                                          fill = "#fefff0"),
        strip.text.x = element_text(margin = margin(t = 5,
                                                    r = 5,
                                                    b = 5,
                                                    l = 5, 
                                                    unit = "pt"), 
                                    face = "bold",
                                    size = 12))
```

# Mean height

```{r }
#| out-width: 85%
# Data
# https://ncdrisc.org/index.html > DATA DOWNLOADS >
# HEIGHT > Country-specific data for all countries
height_tbl <- read_csv(file = "000_data/001_NCD_RisC_Lancet_2020_height_child_adolescent_country.csv") %>% 
  janitor::clean_names() %>% 
  filter(country == "Colombia", age_group == 19)

height_tbl %>% 
  ggplot(aes(x = year, y = mean_height)) + 
  geom_line(aes(group = sex, color = sex)) + 
  scale_x_continuous(breaks = seq(min(height_tbl$year), 
                                  round(max(height_tbl$year), digits = -1), 
                                  by = 5)) +
  scale_y_continuous(breaks = seq(round(min(height_tbl$mean_height)), 
                                  round(max(height_tbl$mean_height)), 
                                  by = 2)) + 
  scale_color_manual(labels = c("Men", "Women"),
                     values = c("#2C3E50", "#E31A1C")) + 
  labs(x = NULL,
       y = "Centimeters",
       color = NULL,
       title = str_glue("Average height by gender for 19-year-olds in Colombia"),
       subtitle = str_glue("Period: {min(height_tbl$year)} - {max(height_tbl$year)}"), 
       caption = str_glue("Source: NCD Risk Factor Collaboration (NCD-RisC)
                          Last update: 2021-08-13")) +
  theme(legend.position = "bottom",
        panel.border      = element_rect(fill = NA, 
                                         color = "black"),
        plot.background   = element_rect(fill = "#f3fcfc"),
        panel.background  = element_rect(fill = "#f3f7fc"),
        legend.background = element_rect(fill = "#f3fcfc"),
        plot.title        = element_text(face = "bold"),
        axis.title        = element_text(face = "bold"),
        legend.title      = element_text(face = "bold"),
        legend.text       = element_text(size = 12),
        axis.text         = element_text(face = "bold"),
        axis.text.x       = element_text(angle = 90, 
                                         vjust = 0.5,
                                         size = 12),
        axis.text.y       = element_text(size = 12))
```

# Household income

- **ingtotug**: "Ingreso total de la unidad de gasto **antes** de imputación de arriendo a propietarios y usufructuarios" [@dnp_pobreza_2012, pp. 16-17]
    
    + "Ingreso  monetario  primera  actividad  (IMPA)"
    + "Ingreso  en  especie  (IE)"
    + "Ingreso segunda actividad (ISA)"
    + "Ingreso monetario de desocupados e inactivos (IMDI)"
    + "Ingresos por otras fuentes (IOF)"
    
- **ingtotugarr**: "Ingreso total de la unidad de gasto con imputación de arriendo a propietarios y usufructuarios" [@dnp_pobreza_2012, pp. 24-26]

    + Modulo B Datos de la Vivienda: 11. Si tuviera que pagar arriendo por esta vivienda, ¿cuánto estima que tendría que pagar mensualmente? [@dane_cuestionario_2019, p 2]
    
# Household income

```{r }
#| out-width: 85%
# Data
# https://www.dane.gov.co/ > Datos Abiertos Microdatos y Metadatos >
# Sociedad > Pobreza y condiciones de vida >
# Medición de Pobreza Monetaria y Desigualdad 2022 > Hogares
household_tbl <- read_delim(file = "000_data/001_hogares_pobreza_monetaria_desigualdad_2022.csv", 
                            delim = ",", 
                            locale = locale(decimal_mark = ".")) %>% 
  janitor::clean_names() |>  
  select(
    # Llave vivienda 
    directorio,
    # Llave hogar
    secuencia_p,
    # La vivienda ocupada por este hogar es:
    # a. Propia, totalmente pagada 
    # b. Propia, la están pagando 
    # c. En arriendo o subarriendo 
    # d. En usufructo 
    # e. Posesión sin titulo (ocupante 
    # f. Otra
    p5090,
    # Personas en el hogar
    nper, 
    # Ingreso total de la unidad de
    # gasto antes de imputación de
    # arriendo a propietarios y usufructuarios
    ingtotug,
    # Factor de expansión anualizado 
    fex_c)

ingtotug_zero <- filter(household_tbl, 
                        ingtotug == 0) |>  
  _$fex_c |>  
  sum() |>  
  floor()

total_fex_c <- summarize(household_tbl, 
                         sum_fex_c = sum(fex_c))$sum_fex_c

household_income_nper_tbl <- household_tbl |> 
  mutate(pct_fex_c = fex_c / total_fex_c) |> 
  mutate(range_ingtotug = cut(x = ingtotug,
                              breaks = c(seq.int(from = min(household_tbl$ingtotug),
                                                 by = 500000,
                                                 length.out = 20), 
                                         max(household_tbl$ingtotug) + 1),
                              right = FALSE,
                              # Check this if there is problem 
                              # with the last range in relation
                              # to the upper limit
                              dig.lab = 9)) |>
  group_by(range_ingtotug) |>  
  summarize(pct_fex_c = sum(pct_fex_c),
            mean_nper = mean(nper),
            .groups = "drop") |>  
  mutate(pct_fex_c_text = scales::percent(pct_fex_c, accuracy = 0.01),
         mean_nper_text = scales::number(mean_nper, accuracy = 0.01))

household_income_nper_tbl |>  
  ggplot(aes(pct_fex_c, fct_rev(range_ingtotug))) +
  geom_point(shape = 21, 
             fill = "#E31A1C",
             size = 3) +
  geom_segment(aes(xend = 0, yend = fct_rev(range_ingtotug)), 
               color = "#2C3E50") + 
  geom_text(aes(label = pct_fex_c_text),
            hjust = -0.5, 
            size = 4) + 
  scale_x_continuous(limits = c(0, 0.3)) +
  labs(x = NULL,
       y = "Monthly mean income range (2022 COP)",
       title = "Household income distribution in Colombia",
       subtitle = str_glue("Year: 2022
                           Total households: {scales::number(total_fex_c, accuracy = 1, big.mark = ',')}
                           Total households with an income of zero: {scales::number(ingtotug_zero, accuracy = 1, big.mark = ',')}"),
       caption = str_glue('Source: DANE - Medición de Pobreza Monetaria y Desigualdad 2022
                          Last update date: 2023-12-05')) + 
  theme(legend.position = "bottom",
        panel.border      = element_rect(fill = NA, 
                                         color = "black"),
        plot.background   = element_rect(fill = "#f3fcfc"),
        panel.background  = element_rect(fill = "#f3f7fc"),
        legend.background = element_rect(fill = "#f3fcfc"),
        plot.title        = element_text(face = "bold"),
        axis.title        = element_text(face = "bold"),
        legend.title      = element_text(face = "bold"),
        axis.text         = element_text(face = "bold"),
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank(),
        axis.text.y       = element_text(size = 12))
```

# Household income

- If you want to explore more about this topic using data from the year 2019 check out[^1]:

    + [https://www.ofiscal.org/ingresosxhogares](https://www.ofiscal.org/ingresosxhogares)
    
- If you want to explore more about this topic from around the world in a visual way check out[^2]:

    + [https://youtu.be/u4L130DkdOw](https://youtu.be/u4L130DkdOw) (Configure spanish subtitles in the setting options)
    + [https://www.gapminder.org/dollar-street](https://www.gapminder.org/dollar-street)
    
[^1]: Observatorio Fiscal de la Pontifica Universidad Javeriana
[^2]: Dollar Street

# Individuals per household

```{r out.width = "85%"}
household_income_nper_tbl %>% 
  ggplot(aes(mean_nper, fct_rev(range_ingtotug))) +
  geom_point(shape = 21, 
             fill = "#E31A1C",
             size = 3) +
  geom_segment(aes(xend = 0, yend = fct_rev(range_ingtotug)), 
               color = "#2C3E50") + 
  geom_text(aes(label = mean_nper_text),
            hjust = -0.5, 
            size = 4) + 
  scale_x_continuous(limits = c(0, 5)) +
  labs(x = NULL,
       y = "Monthly mean income range (2022 COP)",
       title = "Mean individuals per household by income range in Colombia",
       subtitle = str_glue("Year: 2022
                           Total households: {scales::number(total_fex_c, accuracy = 1, big.mark = ',')}"),
       caption = str_glue('Source: DANE - Medición de Pobreza Monetaria y Desigualdad 2022
                          Last update date: 2023-12-05')) + 
  theme(legend.position = "bottom",
        panel.border      = element_rect(fill = NA, 
                                         color = "black"),
        plot.background   = element_rect(fill = "#f3fcfc"),
        panel.background  = element_rect(fill = "#f3f7fc"),
        legend.background = element_rect(fill = "#f3fcfc"),
        plot.title        = element_text(face = "bold"),
        axis.title        = element_text(face = "bold"),
        legend.title      = element_text(face = "bold"),
        axis.text         = element_text(face = "bold"),
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank(),
        axis.text.y       = element_text(size = 12))
```

# Housing ownership

- Housing (vivienda) ownership  status[^3]

    + "Propia, totalmente pagada"
    + "Propia, la están pagando"
    + "En arriendo o subarriendo"
    + "En usufructo"
    + "Posesión sin título"
    + "Propiedad colectiva"
    + "Otra"

- The concept of housing (vivienda) is different from a household (hogar)

    + Zero or more households can live in a housing (vivienda)
    + For a detail definition of a househould check out [@united_nations_principles_2017, p. 38, 2.33]

[^3]: For a detail definition of these categories checkout [@dane_manual_2022, p. 35] 

# Housing ownership

```{r }
#| out-width: 85%
# Data
household_housing_tbl <- household_tbl |>  
  mutate(pct_fex_c = fex_c / total_fex_c) |>  
  group_by(p5090) |>  
  summarize(pct_fex_c = sum(pct_fex_c), .groups = "drop") %>% 
  mutate(pct_fex_c_text = scales::percent(pct_fex_c, accuracy = 0.01),
         p5090 = factor(p5090,
                        labels = c(str_glue("Propia, 
                                            totalmente pagada"),
                                   str_glue("Propia, 
                                            la están pagando"),
                                   str_glue("En arriendo o 
                                            subarriendo"),
                                   "En usufructo",
                                   str_glue("Posesión 
                                           sin título"),
                                   str_glue("Propiedad 
                                            colectiva"),
                                   "Otra")))

household_housing_tbl |>  
  ggplot(aes(pct_fex_c, fct_rev(p5090))) +
  geom_point(shape = 21, 
             fill = "#E31A1C",
             size = 3) +
  geom_segment(aes(xend = 0, yend = fct_rev(p5090)), 
               color = "#2C3E50") + 
  geom_text(aes(label = pct_fex_c_text),
            hjust = -0.5, size = 5) + 
  scale_x_continuous(limits = c(0, 0.5)) +
  labs(x = NULL,
       y = NULL,
       title = "Housing ownership status of households in Colombia",
       subtitle = str_glue("Year: 2022
                           Total households: {scales::number(total_fex_c, accuracy = 1, big.mark = ',')}"),
       caption = str_glue('Source: DANE - Medición de Pobreza Monetaria y Desigualdad 2022
                          Last update date: 2023-12-05')) + 
  theme(legend.position = "bottom",
        panel.border      = element_rect(fill = NA, 
                                         color = "black"),
        plot.background   = element_rect(fill = "#f3fcfc"),
        panel.background  = element_rect(fill = "#f3f7fc"),
        legend.background = element_rect(fill = "#f3fcfc"),
        plot.title        = element_text(face = "bold"),
        axis.title        = element_text(face = "bold"),
        legend.title      = element_text(face = "bold"),
        axis.text         = element_text(face = "bold"),
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank(),
        axis.text.y       = element_text(size = 12))
```

# School education system and bilingualism

```{r }
#| out-width: 85%
# https://www.dane.gov.co/ > Datos Abiertos Microdatos y Metadatos >
# Sociedad > Educación > Educación Formal 2022 > Obtener Microdatos >
# Caratula única sede educativa
schools_tbl <- read_csv(file = '000_data/001_caratula_unica_de_la_sede_educativa_2022.csv')


schools_bilin_tbl <- schools_tbl |> 
  count(# Sector 01 Oficial 02 No Oficial
    SECTOR_NOMBRE, 
    # ¿La sede educativa es bilingüe? 0 NO 1 SÍ
    ES_BILINGUE, 
    #  ¿La sede educativa es bilingüe? 
    # No\Si 1 Programa académico 100% bilingüe 
    # 2 Bilingüismo como profundización y énfasis en el plan de estudios
    TIPOBIL_NOMBRE) |> 
  mutate(pct_n = n / nrow(schools_tbl),
         pct_n_text = scales::percent(pct_n, accuracy = 0.01),
         TIPOBIL_NOMBRE = case_when(
           ES_BILINGUE == "NO" ~ "No bilingüe",
           is.na(ES_BILINGUE) == TRUE ~ "Sin información",
           TIPOBIL_NOMBRE == "Bilingüismo como profundización y énfasis en el plan de estudios" ~ "Profundización/énfasis",
           TIPOBIL_NOMBRE == "Programa académico 100% bilingüe" ~ "100% bilingüe",
           TIPOBIL_NOMBRE == " " ~ "Sin información",
           .default = TIPOBIL_NOMBRE),
         TIPOBIL_NOMBRE = fct_reorder2(TIPOBIL_NOMBRE, SECTOR_NOMBRE, pct_n))

schools_bilin_tbl |>  
  ggplot(aes(TIPOBIL_NOMBRE, pct_n)) + 
  geom_col(color = "black",
           fill = "#2C3E50") +
  geom_text(aes(label = pct_n_text), 
            vjust = -0.8,
            size = 5) + 
  scale_y_continuous(limits = c(0, 0.8)) +
  facet_wrap(vars(SECTOR_NOMBRE)) + 
  labs(x = NULL,
       y = NULL,
       title = "Bilingualism and educational establishments (preschool, elementary, middle and high school) in Colombia",
       subtitle = str_glue("Año: 2022
                           Total educational establishments: {scales::number(sum(schools_bilin_tbl$n), big.mark = ',')} 
                           Total non official educational establishments: {scales::number(sum(schools_bilin_tbl$n[1:4]), big.mark = ',')}
                           Total official educational establishments: {scales::number(sum(schools_bilin_tbl$n[5:8]), big.mark = ',')}"),
       caption = str_glue('Fuente: DANE - Educación Formal - 2022 - Carátula única sede educativa
                          Última fecha de actualización: 2023-08-15')) + 
  theme(legend.position = "bottom",
        panel.border      = element_rect(fill = NA, 
                                         color = "black"),
        plot.background   = element_rect(fill = "#f3fcfc"),
        panel.background  = element_rect(fill = "#f3f7fc"),
        legend.background = element_rect(fill = "#f3fcfc"),
        plot.title        = element_text(face = "bold"),
        axis.title        = element_text(face = "bold"),
        legend.title      = element_text(face = "bold"),
        axis.text         = element_text(face = "bold"),
        axis.text.x = element_text(angle = 90, 
                                   hjust = 1, 
                                   vjust = 0.5, size = 12),
        axis.text.y = element_blank(),
        axis.ticks.y = element_blank(),
        strip.background.x = element_rect(color = "black", 
                                          fill = "#fefff0"),
        strip.text.x = element_text(margin = margin(t = 5,
                                                    r = 5,
                                                    b = 5,
                                                    l = 5, 
                                                    unit = "pt"), 
                                    face = "bold",
                                    size = 12))
```

# Aggregate value

-  ISIC adapted for Colombia [@dane_clasificacion_2022, pp. 134-677]

```{r}
tibble(Section = LETTERS[1:11],
       Division = c("01-03", "05-09", "10-33",
                    "35", "36-39", "41-43",
                    "45-47", "49-53", "55-56",
                    "58-63", "64-66"),
       Description = c("Agricultura, ganadería, caza, silvicultura y pesca",
                       "Explotación de minas y canteras",
                       "Industrias manufactureras",
                       "Suministro de electricidad, gas, vapor, y aire acondicionado",
                       "Distribución de agua; evacuación y tratamiento de aguas residuales, gestión de desechos y
actividades de saneamiento ambiental",
"Construcción",
"Comercio al por mayor y al por menor; reparación de vehículos automotores y motocicletas",
"Transporte y almacenamiento",
"Alojamiento y servicios de comida",
"Información y comunicaciones", 
"Actividades financieras y de seguros")) %>% 
  kable(format = "latex", booktabs = TRUE) %>% 
  kable_styling(font_size = 9, latex_options = "striped") %>%
  row_spec(row = 0, bold = TRUE) %>%
  column_spec(column = 1, width = "0.3in") %>%
  column_spec(column = 2, width = "0.3in") %>%
  column_spec(column = 3, width = "3.4in")
```

# Aggregate value

-  ISIC adapted for Colombia [@dane_clasificacion_2022, pp. 134-677]

```{r}
tibble(Section = LETTERS[12:21],
       Division = c("68", "69-75",
                    "77-82", "84", "85",
                    "86-88", "90-93", "94-96",
                    "97-98", "99"),
       Description = c("Actividades inmobiliarias",
                       "Actividades profesionales, científicas y técnicas",
                       "Actividades de servicios administrativos y de poyo",
                       "Administración pública y defensa; planes de seguridad social de afiliación obligatoria",
"Educación",
"Actividades de atención de la salud humana y de asistencia social",
"Actividades artísticas, de entretenimiento y recreación",
"Otras actividades de servicios",
"Actividades de los hogares en calidad de empleadores; actividades no diferenciadas de los
hogares individuales como productores de bienes y servicios para uso propio",
"Actividades de organizaciones y entidades extraterritoriales")) %>%
  kable(format = "latex", booktabs = TRUE) %>% 
  kable_styling(font_size = 9, latex_options = "striped") %>%
  row_spec(row = 0, bold = TRUE) %>%
  column_spec(column = 1, width = "0.3in") %>% 
  column_spec(column = 2, width = "0.3in") %>%
  column_spec(column = 3, width = "3.4in")
```

# Aggregate value

- $\text{Aggregate value = Gross production - Intermediate consumption}$ 

```{r }
#| out-width: 80% 
# Estadísticas por tema > Industria > Encuesta Anual Manufacturera (EAM) > Acceso a Microdatos Anomimizados > Encuesta Anual Manufacturera – EAM - 2020

# https://www.dane.gov.co/ > Datos Abiertos Microdatos y Metadatos >
# Economía > Industria > Encuesta Anual Manufacturera – EAM - 2020 > 
# Obtener Microdatos
manufac_tbl <- read_csv(file = "000_data/001_encuesta_anual_manufacturera_2021.csv") |>  
  janitor::clean_names() |> 
  select(nordemp, nordest,
         ciiu4, periodo,
         valagri) |>  
  group_by(nordemp) |>  
  summarise(valagri = sum(valagri))

total_nordemp <- nrow(manufac_tbl)

total_valagri <- manufac_tbl |>  
  summarise(sum_valagri = sum(valagri)) |>  
  _$sum_valagri

manufac_tbl |>  
  ggplot(aes(0, valagri)) +
  geom_point(shape = 21,
             fill = "#E31A1C",
             size = 3,
             position = position_jitter(width = 0.2, 
                                        seed = 1234)) +
  scale_y_continuous(labels = scales::number_format(scale = 1e-6, 
                                                    suffix = "M", 
                                                    big.mark = ",")) + 
  labs(x = NULL, 
       y = "COP 2021 (M = Millions)", 
       title = "Distribution of aggregate value in the manufacturing Colombian sector",
       # scales::label_number is a closure: typeof(label_number())
       subtitle = str_glue("Period: 2021
                           Total aggregate value: {number(total_valagri, scale = 1e-6, big.mark = ',', suffix = 'M')} COP
                           Number of companies: {total_nordemp}
                           Observation: Every point represents a company"),
       caption = 'Source: DANE - Encuesta Anual Manufacturera – EAM - 2021
                          Last update date: 2023-07-31') + 
  theme(panel.border      = element_rect(fill = NA, color = "black"),
        plot.background   = element_rect(fill = "#f3fcfc"),
        panel.background  = element_rect(fill = "#f3f7fc"),
        legend.background = element_rect(fill = "#f3fcfc"),
        plot.title        = element_text(face = "bold"),
        axis.title        = element_text(face = "bold"),
        legend.title      = element_text(face = "bold"),
        axis.text         = element_text(face = "bold"),
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank(),
        axis.text.y = element_text(size = 12))
```

# Egg wholesale prices

```{r out.width = "85%"}
# Data
# https://www.dane.gov.co/ > Precios y costos >
# Precios > Sistema de Información de Precios Agropecuarios (SIPSA) >
#  SERIES HISTÓRICAS POR COMPONENTE > Precios Mayoristas > Series históricas precios mayoristas
egg_jan_2021_tbl <- read_excel(path = "000_data/001_series_historicas_precios_mayoristas_2021_jan_july.xlsx", 
                               sheet = 2, 
                               range = "A7:E4608") |> 
  janitor::clean_names() |> 
  select(fecha, producto:precio_promedio_por_kilogramo) |>  
  filter(str_detect(string = producto, pattern = "^[Hh]uevo"))

egg_diciembre_2023_tbl <- read_excel(path = "000_data/001_series_historicas_precios_mayoristas_2023_diciembre.xlsx", 
                                 sheet = 13, 
                                 range = "A7:E4525") |>  
  janitor::clean_names() |> 
  select(fecha, producto:precio_promedio_por_kilogramo) |> 
  filter(str_detect(string = producto, pattern = "^[Hh]uevo"))

mercado_list <- c("Cali, Siloé",
                  "Pereira, La 41",
                  "Valledupar, Mercado Nuevo")

egg_jan_dic_tbl <- egg_jan_2021_tbl |>  
  bind_rows(egg_diciembre_2023_tbl) |> 
  rename(precio = precio_promedio_por_kilogramo) |>  
  mutate(fecha = ymd(fecha),
         label_mercado = ifelse(mercado %in% mercado_list, mercado, "")) 
# |>  
# mutate(producto = str_to_title(producto))

n_market <- egg_jan_dic_tbl |>  
  count(mercado) |>  
  nrow()

egg_jan_dic_tbl %>% 
  ggplot(aes(precio, producto)) + 
  geom_point(aes(fill = producto),
             shape = 21,
             color = "black",
             size = 3,
             show.legend = FALSE) + 
  geom_label_repel(aes(label = label_mercado),
                   seed = 1234,
                   size = 3, 
                   min.segment.length = 0,
                   box.padding = 1,
                   force = 2,
                   max.overlaps = Inf) + 
  scale_y_discrete(expand = expansion(mult = 0.05)) +
  scale_fill_manual(values = c("#2C3E50", "#E31A1C", "#18BC9C", "#CCBE93", 
                               "#A6CEE3", "#1F78B4", "#B2DF8A", "#FB9A99")) + 
  facet_wrap(vars(fecha)) + 
  labs(x = "COP/1 egg",
       y = NULL, 
       title = str_glue("Egg mean wholesale prices in {n_market} Colombian markets"),
       caption = 'Source: DANE - Sistema de información de precios SIPSA
                          Last update date: 2024-01-10')  + 
  theme(legend.position = "bottom",
        panel.border      = element_rect(fill = NA, 
                                         color = "black"),
        plot.background   = element_rect(fill = "#f3fcfc"),
        panel.background  = element_rect(fill = "#f3f7fc"),
        legend.background = element_rect(fill = "#f3fcfc"),
        plot.title        = element_text(face = "bold"),
        axis.title        = element_text(face = "bold"),
        legend.title      = element_text(face = "bold"),
        axis.text         = element_text(face = "bold"),
        axis.text.x = element_text(angle = 90, 
                                   hjust = 1, 
                                   vjust = 0.5, size = 12),
        axis.text.y = element_text(size = 10),
        strip.background.x = element_rect(color = "black", 
                                          fill = "#fefff0"),
        strip.text.x = element_text(margin = margin(t = 5,
                                                    r = 5,
                                                    b = 5,
                                                    l = 5, 
                                                    unit = "pt"), 
                                    face = "bold",
                                    size = 12))
```

# Flows and stocks

- **Stock**: a variable that is measured at a particular point in time

- **Flow**: a variable that is measured over a period of time

- Example "Declaración de Renta Gustavo Francisco Petro Urrego Año Gravable 2019":

    + [https://www.funcionpublica.gov.co/fdci/consultaCiudadana](https://www.funcionpublica.gov.co/fdci/consultaCiudadana)
    
        + Tipo de persona: NATURAL
        + Primer nombre: Gustavo
        + Segundo nombre: Francisco
        + Primer apellido: Petro
        + Segundo apellido: Urrego
        
# Flows and stocks

- Patrimonio (stock)

    + 2019-12-31
    
```{r out.width="60%"}
knitr::include_graphics("000_data/001_patrimonio_petro.png")
```
    
- Rentas de trabajo (flow)

    + Between 2019-01-01 and 2019-12-31

```{r out.width="60%"}
knitr::include_graphics("000_data/001_rentas_trabajo_petro.png")
```

# Acknowledgments

- To my family that supports me

- To the taxpayers of Colombia and the __[UMNG students](https://www.umng.edu.co/estudiante)__ who pay my salary

- To the __[Business Science](https://www.business-science.io/)__ and __[R4DS Online Learning](https://www.rfordatasci.com/)__ communities where I learn __[R](https://www.r-project.org/about.html)__ 

- To the __[R Core Team](https://www.r-project.org/contributors.html)__, the creators of __[RStudio IDE](https://rstudio.com/products/rstudio/)__, __[Quarto](https://quarto.org/)__ and the authors and maintainers of the packages  __[tidyverse](https://CRAN.R-project.org/package=tidyverse)__,
__[readxl](https://CRAN.R-project.org/package=readxl)__,
__[janitor](https://CRAN.R-project.org/package=janitor)__,
__[scales](https://CRAN.R-project.org/package=scales)__,
__[knitr](https://CRAN.R-project.org/package=knitr)__, 
__[kableExtra](https://CRAN.R-project.org/package=kableExtra)__,
__[lubridate](https://CRAN.R-project.org/package=lubridate)__,
__[ggrepel](https://CRAN.R-project.org/package=ggrepel)__, and __[tinytex](https://CRAN.R-project.org/package=tinytex)__ for allowing me to access these tools without paying for a license

- To the __[Linux kernel community](https://www.kernel.org/category/about.html)__ for allowing me the possibility to use some __[Linux distributions](https://static.lwn.net/Distributions/)__ as my main __[OS](https://en.wikipedia.org/wiki/Operating_system)__ without paying for a license

# References {.allowframebreaks}